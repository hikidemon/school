@use 'sass:color';

// colors
$color-white: #fff;
$color-white-dark: #f5f5f5;
$color-black: #2c2c2c;
$color-black-light: #333;
$color-primary: #36ac55;
$color-primary-dark: #3d8263;
$color-primary-light: #4effa7;
$color-emerald: #1dd3af;
$color-secondary: #fba0c9;
$color-secondary-dark: #9e628c;
$color-secondary-light: #ffbbeb;
$color-dark: #1d2021;
$color-primary-gradient: #03ff89, #48f2b9, #6dedc2;
$animation-gradient: gradient-shift 4s linear infinite;

$iceglass:linear-gradient(145deg, rgba(15, 144, 111, 0.8) 0%, rgba(13, 168, 155, 0.8) 0%, rgba(9, 110, 93, 0.8) 50%, rgba(5, 101, 88, 0.8) 100%);
$glass-primary-color: rgba(16, 118, 93, 0.9) !default;
$glass-secondary-color: rgba(16, 134, 101, 0.8) !default;
$glass-accent-color: rgba(50, 220, 180, 0.7) !default;
$glass-thickness: 10px !default;
$glass-border-radius: 24px !default;
$glass-blur: 16px !default;
$glass-text-color: rgba(0, 40, 30, 0.9) !default;
$glass-font-family: 'SF Pro Display', -apple-system, BlinkMacSystemFont, sans-serif !default;

// Миксин для базового контейнера стекла
@mixin glass-container(
  $perspective: 1200px,
  $transition: all 0.3s ease
) {
  perspective: $perspective;
  position: relative;
  transition: $transition;
  will-change: transform;
  transform-style: preserve-3d;
}

// Миксин для карточки стекла (основной эффект)
@mixin glass-card(
  $border-radius: $glass-border-radius,
  $shadow: 0 10px 30px rgba(0, 60, 45, 0.3),
  $transition: transform 0.1s linear border-radius 0.7s cubic-bezier(0.23, 1, 0.32, 1)
) {
  position: relative;
  border-radius: $border-radius;
  transform-style: preserve-3d;
  transition: $transition;
  will-change: transform, border-radius;
  box-shadow: $shadow;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: inherit;
    opacity: 0.6;
    transition: opacity 0.3s ease;
    z-index: 3;
    pointer-events: none;
  }
  
  &:hover::before {
    opacity: 0.9;
  }
}

// Миксин для толщины стекла (глубина)
@mixin glass-depth(
  $thickness: $glass-thickness,
  $color: $glass-primary-color,
  $blur: 2px,
  $opacity: 0.8
) {
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: linear-gradient(
    145deg,
    transparent 0%,
    $color 50%,
    transparent 100%
  );
  transform: translateZ(-$thickness);
  filter: blur($blur);
  opacity: $opacity;
  z-index: 1;
  pointer-events: none;
}

// Миксин для содержимого стекла
@mixin glass-content(
  $padding: 28px,
  $blur: $glass-blur,
  $border: 1px solid rgba(255, 255, 255, 0.15),
  $primary: $glass-primary-color,
  $secondary: $glass-secondary-color
) {
  padding: $padding;
  backdrop-filter: blur($blur) brightness(1.2);
  -webkit-backdrop-filter: blur($blur) brightness(1.2);
  border-radius: inherit;
  background:$iceglass;
  border: $border;
  transform-style: preserve-3d;
  position: relative;
  z-index: 2;
  height: 100%;
  box-sizing: border-box;
}

// Миксин для отражений
@mixin glass-reflections(
  $opacity-1: 0.3,
  $opacity-2: 0.2,
  $color: rgba(255, 255, 255, 0.4)
) {
  position: absolute;
  inset: 0;
  border-radius: inherit;
 
  z-index: 1;

  .reflection {
    position: absolute;
    background: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 0%,
      $color 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform-origin: center;
  }

  .reflection-1 {
    width: 150%;
    height: 40%;
    top: -20%;
    left: -25%;
    transform: rotate(15deg);
    opacity: $opacity-1;
    transition: opacity 0.4s ease;
    animation: reflection-shine 8s infinite linear;
  }

  .reflection-2 {
    width: 200%;
    height: 30%;
    top: 60%;
    left: -50%;
    transform: rotate(-10deg);
    opacity: $opacity-2;
    transition: opacity 0.4s ease;
    animation: reflection-shine 12s infinite linear reverse;
  }
}

// Миксин для 3D текста
@mixin glass-text(
  $size: 2.2rem,
  $weight: 800,
  $thickness: $glass-thickness,
  $color: $glass-text-color,
  $glow-color: $glass-accent-color,
  $font-family: $glass-font-family
) {
  --glass-text-hue-rotate: 0deg;
  --glass-text-brightness: 1;
  
  font-family: $font-family;
  font-size: $size;
  font-weight: $weight;
  color: $color;
  display: inline-block;
  position: relative;
  text-shadow: 
    0 1px 0 rgba(255, 255, 255, 0.3),
    0 -1px 0 rgba(0, 0, 0, 0.7),
    0 2px 4px rgba(0, 0, 0, 0.5),
    0 4px 8px rgba($glow-color, 0.3),
    0 8px 16px rgba($glow-color, 0.2);
  
  &::before {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    color: rgba($glow-color, 0.7);
    z-index: -1;
    transform: translateZ(-$thickness/2);
    filter: 
      blur(1px)
      hue-rotate(var(--glass-text-hue-rotate))
      brightness(var(--glass-text-brightness));
    text-shadow: 
      0 0 10px rgba($glow-color, 0.7),
      0 0 20px rgba($glow-color, 0.5),
      0 0 30px rgba($glow-color, 0.3);
  }
  
  &::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -4px;

    border-radius: 50%;
    filter: blur(2px);
    z-index: -2;
    transform: translateZ(-$thickness);
  }
}

// Миксин для стеклянных кнопок/тегов
@mixin glass-button(
  $padding: 8px 16px,
  $border-radius: 18px,
  $primary: $glass-primary-color,
  $secondary: $glass-secondary-color,
  $blur: 8px,
  $border: 1px solid rgba($glass-accent-color, 0.3)
) {
  padding: $padding;
  border-radius: $border-radius;
  background:$iceglass;
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
  border: $border;
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.3),
    inset 0 1px 1px rgba(255, 255, 255, 0.1),
    0 0 10px rgba($glass-accent-color, 0.2);
  transform: translateZ(10px);
  transition: 
    transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275),
    box-shadow 0.3s ease;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  
  &:hover {
    transform: translateY(-3px) translateZ(15px);
    box-shadow: 
      0 4px 16px rgba($primary, 0.4),
      inset 0 1px 1px rgba(255, 255, 255, 0.2),
      0 0 20px rgba($glass-accent-color, 0.3);
  }

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      120deg,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0) 100%
    );
    transform: translateX(-100%);
    transition: transform 0.6s ease;
  }
  
  &:hover::before {
    transform: translateX(100%);
  }
}

// Миксин для аватара с ореолом
@mixin glass-avatar(
  $size: 80px,
  $blur: 6px,
  $halo-color: $glass-accent-color,
  $border: 2px solid rgba(255, 255, 255, 0.3)
){
  position: relative;
  width: $size;
  height: $size;

  .glass-avatar-halo {
    position: absolute;
    top: -8px;
    left: -8px;
    right: -8px;
    bottom: -8px;
    border-radius: 50%;
    background: conic-gradient(
      from 0deg,
      rgba(255, 255, 255, 0.9) 0%,
      rgba($halo-color, 0.7) 180deg,
      rgba(255, 255, 255, 0.9) 360deg
    );
    z-index: 1;
    filter: blur($blur);
    animation: glass-rotate-halo 8s linear infinite;
    opacity: 0.8;
   
  }

  img {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    object-fit: cover;
    position: relative;
    z-index: 2;
    border: $border;
    box-shadow: 
      0 4px 20px rgba(0, 0, 0, 0.3),
      inset 0 0 20px rgba($halo-color, 0.4);
  }
}

// Анимации для стеклянных эффектов
@mixin glass-animations() {
  @keyframes glass-rotate-halo {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes reflection-shine {
    0% { transform: translateX(-100%) rotate(15deg); }
    100% { transform: translateX(100%) rotate(15deg); }
  }

  @keyframes glass-glow {
    0%, 100% { opacity: 0.7; }
    50% { opacity: 1; }
  }
}

// Миксин для инициализации стеклянного дизайна (включает все анимации)
@mixin glass-init() {
  @include glass-animations();
}

$box-shadow:
  0 0 20px rgba(80, 200, 144, 0.7),
  0 0 30px rgba(80, 200, 172, 0.5),
  0 0 50px rgba(80, 200, 164, 0.3);
$ushadow:4px 4px 4px 4px rgba(0, 252, 181, 0.1);
$shadow:
  0.3rem 0.3rem 0.6rem var(--greyLight-2),
  -0.2rem -0.2rem 0.5rem var(--white);
$inner-shadow:
  inset 0.2rem 0.2rem 0.5rem var(--greyLight-2),
  inset -0.2rem -0.2rem 0.5rem var(--white);

@mixin card-style($border-color: #e0e0e0, $border-radius: 8px, $shadow-color: rgba(0, 0, 0, 0.1), $shadow-blur: 10px, $shadow-spread: 0, $shadow-x: 0, $shadow-y: 4px) {
  border: 1px solid var(--color-emerald);
  box-shadow:  4px 4px 6px  rgba(80, 200, 144, 0.7),
  4px 4px 6px rgba(80, 200, 172, 0.5),
  4px 4px 6px rgba(80, 200, 164, 0.3);;
  
  &:hover {
    box-shadow: $shadow-x ($shadow-y + 2px) ($shadow-blur + 2px) $shadow-spread darken($shadow-color, 10%);
    transform: translateY(-2px);
  }
}

@mixin ice-emerald-gradient {
  background: linear-gradient(145deg, 
    rgba(32, 201, 151, 0.1) 0%, 
    rgba(23, 190, 187, 0.2) 30%, 
    rgba(15, 118, 110, 0.4) 70%, 
    rgba(7, 59, 76, 0.6) 100%);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid rgba(64, 224, 208, 0.2);
  box-shadow: 
    0 4px 30px rgba(0, 0, 0, 0.1),
    inset 0 0 12px rgba(64, 224, 208, 0.3),
    0 0 20px rgba(32, 201, 151, 0.2);
}

@mixin ice-emerald-button {
  position: relative;
  overflow: hidden;
  background: rgba(32, 201, 151, 0.15);
  border: 1px solid rgba(64, 224, 208, 0.3);
  color: white;
  padding: 8px 20px;
  border-radius: 20px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  box-shadow: 
    0 2px 10px rgba(0, 0, 0, 0.1),
    inset 0 1px 1px rgba(255, 255, 255, 0.2);
  
  &::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      rgba(64, 224, 208, 0) 0%,
      rgba(64, 224, 208, 0) 40%,
      rgba(64, 224, 208, 0.3) 50%,
      rgba(64, 224, 208, 0) 60%,
      rgba(64, 224, 208, 0) 100%
    );
    transform: rotate(30deg);
    animation: button-shine 3s infinite;
  }
  
  &:hover {
    background: rgba(32, 201, 151, 0.25);
    box-shadow: 
      0 4px 20px rgba(0, 0, 0, 0.2),
      inset 0 0 10px rgba(64, 224, 208, 0.4),
      0 0 30px rgba(32, 201, 151, 0.3);
    transform: translateY(-2px);
  }
  
  &:active {
    transform: translateY(1px);
  }
}

@mixin ice-emerald-card {
  @include ice-emerald-gradient;
  border-radius: 16px;
  padding: 20px;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(64, 224, 208, 0.05) 0%,
      rgba(32, 201, 151, 0.1) 100%
    );
    pointer-events: none;
  }
  
  &:hover {
    transform: translateY(-5px);
    box-shadow: 
      0 15px 35px rgba(0, 0, 0, 0.2),
      inset 0 0 15px rgba(64, 224, 208, 0.4),
      0 0 30px rgba(32, 201, 151, 0.4);
  }
}

@mixin ice-emerald-avatar {
  border: 2px solid rgba(64, 224, 208, 0.4);
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.3),
    inset 0 0 15px rgba(64, 224, 208, 0.5),
    0 0 25px rgba(32, 201, 151, 0.4);
  transition: all 0.3s ease;
  
  &:hover {
    box-shadow: 
      0 6px 25px rgba(0, 0, 0, 0.4),
      inset 0 0 20px rgba(64, 224, 208, 0.7),
      0 0 35px rgba(32, 201, 151, 0.6);
  }
}

@mixin ice-emerald-halo {
  background: conic-gradient(
    from 0deg,
    rgba(255, 255, 255, 0.9) 0%,
    rgba(64, 224, 208, 0.8) 180deg,
    rgba(255, 255, 255, 0.9) 360deg
  );
  filter: blur(8px);
  animation: rotate-halo 8s linear infinite;
  opacity: 0.7;
}

// Анимации
@keyframes button-shine {
  0% { transform: translateX(-100%) rotate(30deg); }
  100% { transform: translateX(100%) rotate(30deg); }
}

@keyframes rotate-halo {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes gradient-shift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes pulse-emerald {
  0% { box-shadow: 0 0 0 0 rgba(32, 201, 151, 0.7); }
  70% { box-shadow: 0 0 0 10px rgba(32, 201, 151, 0); }
  100% { box-shadow: 0 0 0 0 rgba(32, 201, 151, 0); }
}


$colors: (
  white: $color-white,
  black: $color-black,
  primary: $color-primary,
  secondary: $color-secondary,
  dark: $color-dark,
  primary-dark: $color-primary-dark,
  primary-light: $color-primary-light,
  secondary-dark: $color-secondary-dark,
  secondary-light: $color-secondary-light,
  emerald: $color-emerald,
  primary-gradient: $color-primary-gradient,
  black-light: $color-black-light,
  white-dark: $color-white-dark,
  box-shadow: $box-shadow
);
